编译方式（命令行，在项目根目录下执行）：

```shell
//Linux or macOS
cmake .
make -j 4
//Windows
cmake -G "MinGW Makefiles" .
make -j 4
```

输出可执行文件位于 bin 文件夹下，Linux 下文件名为`bp-linux` ，Windows 下文件名为`bp.exe` ，Mac 下文件名为`bp-mac` 。

使用方式：在 bin 文件夹下直接使用`./bp` 执行文件将对项目根目录下的 mnist 文件夹中的60000个训练图像数据进行读取并进行训练，提交的代码中设定训练迭代次数为15次，输入层包含了784个节点（对应用于训练的数字图像的784个像素点），1个隐含层包含了30个节点，输出层为10个节点（对应10个数字），学习速率$\eta=0.04$ 。训练完成后将会把训练完成的模型数据存入 mnist 文件夹下的network.txt 文件中，测试时读取该文件进行测试。同时还会生成一张反应训练过程中正确率变化的折线图rateGraph.bmp存入 mnist 文件夹中。

在 bin 文件夹下使用`./bp test` 命令可以执行测试，对根目录下 mnist 文件夹中的10000个测试图像数据进行读取以进行测试。完成后在命令行中显示测试正确率。

进行训练或测试前对图像进行了归一化处理，即将原本为0-255的图像像素点按位除以255归一化为0-1的数据。